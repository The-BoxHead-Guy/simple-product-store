---
import navLinks from "../constants/navLinks";
---

<nav class="fixed top-0 w-full bg-white shadow-md z-50">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <!-- Left Side -->
      <div class="flex items-center gap-6">
        <button
          id="menu-button"
          class="md:hidden"
          aria-label="Open menu"
          aria-expanded="false"
        >
          <svg
            class="h-6 w-6 text-gray-600 menu-icon"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
        <h1 class="text-2xl font-bold text-gray-900">SNEAKERS</h1>
      </div>

      <!-- Desktop Menu (hidden on mobile) -->
      <div class="hidden md:flex md:items-center md:gap-6">
        {
          navLinks.map((link) => (
            <a
              href={link.href}
              class="text-gray-600 hover:text-gray-900 transition-colors"
            >
              {link.name}
            </a>
          ))
        }
      </div>

      <!-- Right Side -->
      <div class="flex items-center gap-4">
        <button class="relative" aria-label="Cart">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6 text-gray-600"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"
            ></path>
          </svg>
          <span
            class="absolute -top-2 -right-2 bg-orange-500 text-white text-xs w-5 h-5 rounded-full flex items-center justify-center"
            >3</span
          >
        </button>
        <img
          src="/images/avatar.png"
          alt="User profile"
          class="w-8 h-8 rounded-full border-2 border-transparent hover:border-orange-500 transition-colors"
        />
      </div>
    </div>
  </div>

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="fixed inset-0 z-50 bg-black/50 hidden transition-opacity duration-300"
  >
    <div
      class="fixed inset-y-0 left-0 w-64 bg-white transform transition-transform duration-300 -translate-x-full"
      id="menu-panel"
    >
      <div class="p-6">
        <!-- Close Button -->
        <button class="mb-8" aria-label="Close menu" id="close-button">
          <svg
            class="h-6 w-6 text-gray-600"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>

        <!-- Mobile Menu Links -->
        <nav class="space-y-4">
          {
            navLinks.map((link) => (
              <a
                href={link.href}
                class="block py-2 text-gray-900 hover:text-orange-500 transition-colors font-bold text-xl font-kumbh"
                onclick="toggleMenu()"
              >
                {link.name}
              </a>
            ))
          }
        </nav>
      </div>
    </div>
  </div>
</nav>

<script>
  function toggleMenu() {
    const mobileMenu = document.getElementById("mobile-menu");
    const menuPanel = mobileMenu.querySelector("#menu-panel");
    const isOpen = !mobileMenu.classList.contains("hidden");

    // Toggle menu visibility
    mobileMenu.classList.toggle("hidden");
    menuPanel.classList.toggle("-translate-x-full");
    document.body.classList.toggle("overflow-hidden");

    // Update aria-expanded state
    document
      .getElementById("menu-button")
      .setAttribute("aria-expanded", !isOpen);
  }

  // Event Listeners
  document.getElementById("menu-button").addEventListener("click", toggleMenu);
  document.getElementById("close-button").addEventListener("click", toggleMenu);

  // Close when clicking outside
  document.getElementById("mobile-menu").addEventListener("click", (e) => {
    if (e.target === document.getElementById("mobile-menu")) {
      toggleMenu();
    }
  });

  // Close on ESC key
  document.addEventListener("keydown", (e) => {
    if (
      e.key === "Escape" &&
      !document.getElementById("mobile-menu").classList.contains("hidden")
    ) {
      toggleMenu();
    }
  });
</script>

<style>
  /* Add custom transitions */
  #mobile-menu {
    transition: opacity 0.3s;
  }
  #mobile-menu div {
    transition: transform 0.3s;
  }
</style>
